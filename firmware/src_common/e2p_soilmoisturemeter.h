/*
* This file is part of smarthomatic, http://www.smarthomatic.org.
* Copyright (c) 2013..2014 Uwe Freese
*
* smarthomatic is free software: you can redistribute it and/or modify it
* under the terms of the GNU General Public License as published by the
* Free Software Foundation, either version 3 of the License, or (at your
* option) any later version.
*
* smarthomatic is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
* Public License for more details.
*
* You should have received a copy of the GNU General Public License along
* with smarthomatic. If not, see <http://www.gnu.org/licenses/>.
*
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
* ! WARNING: This file is generated by the SHC EEPROM editor and should !
* ! never be modified manually.                                         !
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
*/

#ifndef _E2P_SOILMOISTUREMETER_H
#define _E2P_SOILMOISTUREMETER_H

#include "e2p_access.h"

// E2P Block "SoilMoistureMeter"
// =============================
// Start offset (bit): 512
// Overall block length: 7680 bits

// WakeupInterval (EnumValue)
// Description: Decide after which time the device should be woken up by the RFM12B transceiver to measure or send values.

typedef enum {
  WAKEUPINTERVAL_2S = 1018,
  WAKEUPINTERVAL_4S = 1274,
  WAKEUPINTERVAL_6S = 1840,
  WAKEUPINTERVAL_8S = 1530,
  WAKEUPINTERVAL_10S = 1692,
  WAKEUPINTERVAL_15S = 1770,
  WAKEUPINTERVAL_20S = 1948,
  WAKEUPINTERVAL_30S = 2027,
  WAKEUPINTERVAL_45S = 2224,
  WAKEUPINTERVAL_60S = 2421,
  WAKEUPINTERVAL_75S = 2450,
  WAKEUPINTERVAL_90S = 2480,
  WAKEUPINTERVAL_105S = 2509,
  WAKEUPINTERVAL_120S = 2538,
  WAKEUPINTERVAL_3M = 2736,
  WAKEUPINTERVAL_4M = 2794,
  WAKEUPINTERVAL_5M = 2962,
  WAKEUPINTERVAL_8M = 3050,
  WAKEUPINTERVAL_12M = 3248,
  WAKEUPINTERVAL_15M = 3292,
  WAKEUPINTERVAL_20M = 3474
} WakeupIntervalEnum;

// Set WakeupInterval (EnumValue)
// Offset: 512, length bits 16
static inline void e2p_soilmoisturemeter_set_wakeupinterval(WakeupIntervalEnum val)
{
  eeprom_write_UIntValue(512, 16, val);
}

// Get WakeupInterval (EnumValue)
// Offset: 512, length bits 16
static inline WakeupIntervalEnum e2p_soilmoisturemeter_get_wakeupinterval(void)
{
  return eeprom_read_UIntValue16(512, 16, 0, 65535);
}

// MinVal (UIntValue)
// Description: This is the minimum counter value measured.

// Set MinVal (UIntValue)
// Offset: 528, length bits 32, min val 0, max val 2000000000
static inline void e2p_soilmoisturemeter_set_minval(uint32_t val)
{
  eeprom_write_UIntValue(528, 32, val);
}

// Get MinVal (UIntValue)
// Offset: 528, length bits 32, min val 0, max val 2000000000
static inline uint32_t e2p_soilmoisturemeter_get_minval(void)
{
  return eeprom_read_UIntValue32(528, 32, 0, 2000000000);
}

// MaxVal (UIntValue)
// Description: This is the maximum counter value measured.

// Set MaxVal (UIntValue)
// Offset: 560, length bits 32, min val 0, max val 2000000000
static inline void e2p_soilmoisturemeter_set_maxval(uint32_t val)
{
  eeprom_write_UIntValue(560, 32, val);
}

// Get MaxVal (UIntValue)
// Offset: 560, length bits 32, min val 0, max val 2000000000
static inline uint32_t e2p_soilmoisturemeter_get_maxval(void)
{
  return eeprom_read_UIntValue32(560, 32, 0, 2000000000);
}

// Reserved area with 7600 bits
// Offset: 592


#endif /* _E2P_SOILMOISTUREMETER_H */
