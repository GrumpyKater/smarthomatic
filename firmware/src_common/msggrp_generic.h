/*
* This file is part of smarthomatic, http://www.smarthomatic.org.
* Copyright (c) 2013 Uwe Freese
*
* smarthomatic is free software: you can redistribute it and/or modify it
* under the terms of the GNU General Public License as published by the
* Free Software Foundation, either version 3 of the License, or (at your
* option) any later version.
*
* smarthomatic is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
* Public License for more details.
*
* You should have received a copy of the GNU General Public License along
* with smarthomatic. If not, see <http://www.gnu.org/licenses/>.
*
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
* ! WARNING: This file is generated by the SHC EEPROM editor and should !
* ! never be modified manually.                                         !
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
*/

#include "packet_header.h"
#include "packet_headerext_ackstatus.h"
#include "packet_headerext_ack.h"
#include "packet_headerext_status.h"
#include "packet_headerext_setget.h"
#include "packet_headerext_set.h"
#include "packet_headerext_get.h"
#include "e2p_access.h"

// Message Group "generic"
// =======================
// MessageGroupID: 0
// Description: This group contains messages useful for different devices.


// Message "generic_batterystatus"
// -------------------------------
// MessageGroupID: 0
// MessageID: 5
// Possible MessageTypes: Get, Status, AckStatus
// Validity: test
// Length w/o Header + HeaderExtension: 7 bits
// Data fields: Percentage
// Description: Tells the current battery status in percent. Please note that the "Get" may not be answered because a device does not listen to requests.

// Function to initialize header for the MessageType "Get".
static inline void pkg_header_init_generic_batterystatus_get(void)
{
  memset(&bufx[0], 0, sizeof(bufx));
  pkg_header_set_messagetype(0);
  pkg_headerext_get_set_messagegroupid(0);
  pkg_headerext_get_set_messageid(5);
  __HEADEROFFSETBITS = 95;
  __PACKETSIZEBYTES = 16;
}

// Function to initialize header for the MessageType "Status".
static inline void pkg_header_init_generic_batterystatus_status(void)
{
  memset(&bufx[0], 0, sizeof(bufx));
  pkg_header_set_messagetype(8);
  pkg_headerext_status_set_messagegroupid(0);
  pkg_headerext_status_set_messageid(5);
  __HEADEROFFSETBITS = 83;
  __PACKETSIZEBYTES = 16;
}

// Function to initialize header for the MessageType "AckStatus".
static inline void pkg_header_init_generic_batterystatus_ackstatus(void)
{
  memset(&bufx[0], 0, sizeof(bufx));
  pkg_header_set_messagetype(10);
  pkg_headerext_ackstatus_set_messagegroupid(0);
  pkg_headerext_ackstatus_set_messageid(5);
  __HEADEROFFSETBITS = 120;
  __PACKETSIZEBYTES = 16;
}

// Set Percentage (UIntValue)
// Offset: ((uint16_t)__HEADEROFFSETBITS + 0) / 8, ((uint16_t)__HEADEROFFSETBITS + 0) % 8, length bits 7, min val 0, max val 100
static inline void msg_generic_batterystatus_set_percentage(uint32_t val)
{
  array_write_UIntValue(((uint16_t)__HEADEROFFSETBITS + 0) / 8, ((uint16_t)__HEADEROFFSETBITS + 0) % 8, 7, val, bufx);
}

